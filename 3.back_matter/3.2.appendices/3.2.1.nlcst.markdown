
##### Node
```idl
interface Node {
    type: string;
}
```

##### Parent
```idl
interface Parent <: Node {
    children: [];
}
```

##### Text
```idl
interface Text <: Node {
    value: string | null;
    location: Location | null;
}
```

##### Location
```idl
interface Location {
    start: Position;
    end: Position;
}
```

##### Position
```idl
interface Position {
    line: uint32 >= 1;
    column: uint32 >= 1;
}
```

##### RootNode
Root (Parent) represents the document.

```idl
interface RootNode < Parent {
    type: "RootNode";
}
```

##### ParagraphNode
Paragraph (Parent) represents a self-contained unit of a discourse in writing dealing with a particular point or idea.

```idl
interface ParagraphNode < Parent {
    type: "ParagraphNode";
}
```

##### SentenceNode
Sentence (Parent) represents a grouping of grammatically linked words, that in principle tells a complete thought (although it may make little sense taken in isolation out of context).

```idl
interface SentenceNode < Parent {
    type: "SentenceNode";
}
```

##### WordNode
Word (Parent) represents the smallest element that may be uttered in isolation with semantic or pragmatic content.

```idl
interface WordNode < Parent {
    type: "WordNode";
}
```

##### PunctuationNode
Punctuation (Parent) represents typographical devices which aid the understanding and correct reading of other grammatical units.

```idl
interface PunctuationNode < Parent {
    type: "PunctuationNode";
}
```

##### WhiteSpaceNode
White Space (Punctuation) represents typographical devices devoid of content, separating other grammatical units.

```idl
interface WhiteSpaceNode < PunctuationNode {
    type: "WhiteSpaceNode";
}
```

##### SourceNode
Source (Text) represents an external (non-grammatical) value embedded into a grammatical unit, for example a hyperlink or an emoticon.

```idl
interface SourceNode < Text {
    type: "SourceNode";
}
```

##### TextNode
Text (Text) represents actual content in a NLAST document: One or more characters.

```idl
interface TextNode < Text {
    type: "TextNode";
}
```
